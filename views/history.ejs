<% layout('layouts/test' )%>
    <style>
        .buttonContainer a {
            display: flex;
            align-items: center;
            /* Vertically center the content */
            justify-content: center;
            /* Horizontally center the content */
            width: 80px;
            height: 30px;
            background-color: #dadada;
            transition-duration: .2s;
            color: rgb(46, 46, 46);
            border: none;
            cursor: not-allowed;
            font-weight: 600;
            border-radius: 20px;
            box-shadow: 0 4px 6px -1px #bebdbd, 0 2px 4px -1px #bebdbd;
            transition: all .6s ease;
        }


        .buttonContainer a:hover {
            background-color: #ebebeb;
            box-shadow: 0 10px 15px -3px #bebdbd, 0 4px 6px -2px #bebdbd;
            transition-duration: .2s;
            text-decoration: none;
        }

        .modal {
            display: none;
            /* Hide the modal by default */
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            /* Semi-transparent background */
        }

        .modal-content {
            background-color: white;
            width: 60%;
            max-width: 600px;
            margin: 10% auto;
            padding: 20px;
            border-radius: 5px;
            position: relative;
        }

        .card {
            width: 300px;
            height: 220px;
            background-color: rgb(255, 255, 255);
            border-radius: 8px;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            padding: 20px 30px;
            gap: 13px;
            position: relative;
            overflow: hidden;
            box-shadow: 2px 2px 20px rgba(0, 0, 0, 0.062);
        }

        #cookieSvg {
            width: 50px;
        }

        #cookieSvg g path {
            fill: rgb(97, 81, 81);
        }

        .cookieHeading {
            font-size: 1.2em;
            font-weight: 800;
            color: rgb(26, 26, 26);
        }

        .cookieDescription {
            text-align: center;
            font-size: 0.7em;
            font-weight: 600;
            color: rgb(99, 99, 99);
        }



        .buttonContainer {
            display: flex;
            gap: 20px;
            flex-direction: row;
        }

        .acceptButton {
            width: 80px;
            height: 30px;
            background-color: #F195B2;
            transition-duration: .2s;
            border: none;
            color: rgb(241, 241, 241);
            cursor: pointer;
            font-weight: 600;
            border-radius: 20px;
            box-shadow: 0 4px 6px -1px #eb6891, 0 2px 4px -1px #eb6891;
            transition: all .6s ease;
        }

        .declineButtons {
            width: 80px;
            height: 30px;
            background-color: #dadada;
            transition-duration: .2s;
            color: rgb(46, 46, 46);
            border: none;
            cursor: not-allowed;
            font-weight: 600;
            border-radius: 20px;
            box-shadow: 0 4px 6px -1px #bebdbd, 0 2px 4px -1px #bebdbd;
            transition: all .6s ease;
        }

        .declineButtons:hover {
            background-color: #ebebeb;
            box-shadow: 0 10px 15px -3px #bebdbd, 0 4px 6px -2px #bebdbd;
            transition-duration: .2s;
        }

        .acceptButton:hover {
            background-color: #ed7399;
            box-shadow: 0 10px 15px -3px #eb6891, 0 4px 6px -2px #eb6891;
            transition-duration: .2s;
        }
    </style>
    <form action="/history" method="post">
        <div class="small-container cart-page">

            <table>
                <tr>
                    <th>
                        Product
                    </th>
                    <th class="quantity">
                        Quantity
                    </th>
                    <th>Price</th>
                </tr>


                <% for( let item of items.Cartitems){ %>




                    <tr>
                        <td>
                            <div class="cart-info"><img src="<%=item.picture%>" alt="">
                                <div>
                                    <p class="text-muted mb-3">
                                        <%=item.categorie%>:<%=item.title%>
                                    </p>
                                    <small class="text-muted mb-3">
                                        Price:<%=item.price%>DA <%=item.Commandconfirmed%>

                                    </small><br>
                                    <a id="openModal" class="removeItem" data-item="<%=item.title%>">Remove</a>
                                </div>
                            </div>
                        </td>


                        <td>
                            <div class="card__counter">
                                <button class="card__btn1" type="button">-</button>

                                <div class="card__counter-score">
                                    <%=item.Qte%>
                                </div>
                                <input type="hidden" name="quantity" value="1">
                                <button class="card__btn1 card__btn-plus1" type="button">+</button>
                            </div>
                        </td>
                        <td class="pricee">
                            <%=item.price%> DA
                        </td>

                    </tr>
                    <% } %>


            </table>
            <br>
            <div class="totale-price">
                <table>
                    <tr>
                        <td>Transport fees:</td>
                        <td id="transport">600 DA

                        </td>
                    </tr>
                    <tr>
                        <td>totalprice:</td>
                        <td>
                            <button class="btn btn-primary mt-2 price" type="submit">200 DA</button>
                        </td>

                    </tr>
                    <tr></tr>

                </table>

            </div>
        </div>




    </form>
    <form id="deleteForm" action="/delete" method="post">

        <div class="modal" id="myModal">
            <div class="modal-content card">
                <p class="cookieHeading">Delete this item ?.</p>
                <div class="buttonContainer">
                    <button class="acceptButton" type="submit">Delete</button>
                    <a class="declineButtons" id="closeModal">Cancel</a>

                </div>
            </div>
        </div>

    </form>


    <!-- ... Your HTML code ... -->

    <script>
        const cardContainers = document.querySelectorAll('.card__counter');
        const totalTd = document.querySelector('.price');
        console.log(totalTd.textContent)

        let totalprice = 600;
        cardContainers.forEach(container => {
            const minusButton = container.querySelector('.card__btn1');
            const plusButton = container.querySelector('.card__btn-plus1');
            const counterScore = container.querySelector('.card__counter-score');

            const quantityInput = container.querySelector('input[name="quantity"]');
            let currentNumber = parseInt(counterScore.textContent);
            const priceTd = container.closest('tr').querySelectorAll('td')[2];

            const priceValue = parseInt(priceTd.textContent);
            totalprice = totalprice + priceValue * currentNumber;


            plusButton.addEventListener('click', () => {
                event.preventDefault();
                currentNumber += 1;
                counterScore.textContent = currentNumber;
                totalprice += priceValue;
                totalTd.textContent = totalprice + " DA";
                quantityInput.value = currentNumber;
                priceTd.textContent = currentNumber * priceValue + " DA";
            });

            minusButton.addEventListener('click', () => {
                event.preventDefault();
                if (currentNumber > 1) {
                    currentNumber -= 1;
                    counterScore.textContent = currentNumber;
                    quantityInput.value = currentNumber;
                    totalprice -= priceValue;
                    totalTd.textContent = totalprice + " DA";
                    priceTd.textContent = currentNumber * priceValue + " DA";
                } else {
                    alert("Quantity cannot be less than 1");
                }
            });

        });
        totalTd.textContent = totalprice + " DA";
    </script>
    <script>// script.js
        const openModalButtons = document.querySelectorAll(".removeItem");
        const closeModalButton = document.getElementById("closeModal");
        const modal = document.getElementById("myModal");
        const form = document.getElementById("deleteForm"); // Get the form by ID

        openModalButtons.forEach(openModalButton => {
            openModalButton.addEventListener("click", (event) => {
                event.preventDefault();
                const itemTitle = openModalButton.getAttribute("data-item");
                const actionUrl = `/delete/${encodeURIComponent(itemTitle)}`;

                form.action = actionUrl; // Set the form's action attribute
                modal.style.display = "block";
                console.log("click");
            });

            closeModalButton.addEventListener("click", () => {
                modal.style.display = "none";
            });

            window.addEventListener("click", (event) => {
                if (event.target === modal) {
                    modal.style.display = "none";
                }
            });
        });


    </script>